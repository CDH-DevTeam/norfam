# Generated by Django 4.0.4 on 2022-06-27 07:33

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('published', models.BooleanField(default=True)),
                ('doc_keyword', models.CharField(max_length=100)),
                ('doc_text', models.TextField()),
                ('doc_abstr', models.CharField(max_length=2048)),
                ('doc_suppl', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Entity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('published', models.BooleanField(default=True)),
                ('doc_id', models.IntegerField(blank=True, null=True)),
                ('ent_type', models.TextField()),
                ('ent_name', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Term',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('published', models.BooleanField(default=True)),
                ('term_term', models.CharField(max_length=100, unique=True)),
                ('term_stem', models.CharField(blank=True, max_length=100, null=True)),
                ('term_df', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Termsim',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('published', models.BooleanField(default=True)),
                ('similarity', models.FloatField()),
                ('target', models.ForeignKey(db_column='term1_id', on_delete=django.db.models.deletion.PROTECT, related_name='neighbors', to='norfam.term')),
                ('term', models.ForeignKey(db_column='term2_id', on_delete=django.db.models.deletion.PROTECT, to='norfam.term')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DocTerm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('published', models.BooleanField(default=True)),
                ('tf', models.IntegerField(blank=True, null=True)),
                ('doc_id', models.ForeignKey(db_column='doc_id', on_delete=django.db.models.deletion.PROTECT, related_name='doc_terms', to='norfam.document')),
                ('term', models.ForeignKey(db_column='term_id', on_delete=django.db.models.deletion.PROTECT, to='norfam.term')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
